name: CI and CD data model

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - staging

jobs:
  retraining_ai_model:
    runs-on: ubuntu-latest
    container: docker://dvcorg/cml:latest
    env:
      ############ESTO ACA SE DEBE CAMBIAR SOLAMENTE#####
      repo_token: ${{ secrets.GITHUBTOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
   #######################################################
    steps:
      - uses: actions/checkout@v2

      - name: Upgrade pip
        run: pip install --upgrade pip

      - name: Install requirements
        run:
          pip3 install -r requirements.txt

      - name: Download data from S3
        run: |
          python3 download_data.py
      - name: Configure DVC remote
        run: |
          dvc remote add -f data-remote s3://mlops-proyecto-esteban
          dvc remote modify data-remote region us-east-1
      - name: Mark repo as safe
        run: |
          git config --global --add safe.directory /__w/mlops_retraining/mlops_retraining

      - name: Track dataset with DVC
        run: |
          VERSION=$(git tag | grep ^v | sort -V | tail -n 1 | sed 's/v//' || echo "0")
          NEXT_VERSION=$((VERSION + 1))
          dvc add data/data.csv
          git config --global user.email "allanmontes@outlook.es"
          git config --global user.name "proyecto_final_mlops"
          git add data/data.csv.dvc .gitignore
          git commit -m "dataset via DVC - Version v$NEXT_VERSION"

      - name: Push dataset to S3 via DVC
        run: |
          dvc push -r data-remote

      - name: Execute the training model
        run: |
          python3 retraining.py

      - name: Generating report
        run: |
          echo "## Model metrics" > report.md
          cat metrics.txt >> report.md
          
          echo "## Data visualization" >> report.md
          cml-publish feature_importance.png --md >> report.md
          
          cml-send-comment report.md

build_docker_image:
  needs: retraining_ai_model
  runs-on: ubuntu-latest

  steps:
    - name: Check the repo
      uses: actions/checkout@v2

    - name: Login to dockerhub
      uses: docker/login-action@v2
      with:
        ################################################
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
#######################################################
    - name: Build docker image
      run: docker build -t anyarias20/project-api:latest .

    - name: Docker push to Docker Hub
      run: docker push anyarias20/project-api:latest

    - name: Login into the Docker Hub (echo style)
      run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin

    - name: Deploy to EC2

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }} # Dirección IP pública
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }} # este es el .pem que descargamos al crear el server
        script: |
          docker login -u '${{ secrets.DOCKER_USERNAME }}' -p '${{ secrets.DOCKER_PASSWORD }}'
          if docker ps --all | grep eloquent_hellman; then
            docker stop eloquent_hellman
            docker rm eloquent_hellman
          fi
            
          docker pull anyarias20/project-api:latest
          docker run -d --name eloquent_hellman -p 8000:8000 anyarias20/project-api:latest
